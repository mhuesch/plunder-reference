Every term is either a nat x:@, an app x:(f g), a pin x:{b}, or a law
x:{n a b}.  Given x, find a derivation [x -> .. -> z] such that NF(z).

(f g x) := ((f g) x)

SUB(l,n)  is the nth element of the array l or just n (if out of bounds).
LEN(l)    is the length of the array l.
PUSH(l,x) is the array l with x appended.

NAT(x) = if x:@ then x else 0

RUN(r,(0 f x)) = (RUN(r,f) RUN(r,x))
RUN(r,(1 v k)) = RUN(s,k) where s = PUSH(r,RUN(s,v))
RUN(r,(2 v))   = v
RUN(r,v:@)     = SUB(r,v)
RUN(r,x)       = x

v=0                            =>  ARITY(v)=3
v=1                            =>  ARITY(v)=5
v=2                            =>  ARITY(v)=3
v>2                            =>  ARITY(v)=1
v:(f g)                        =>  ARITY(v)=(ARITY(f)-1)
v:{n a b}                      =>  ARITY(v)=n
v:{x}                          =>  ARITY(v)=ARITY(x)
ARITY(v)>0                     =>  WHNF(v)
v:@                            =>  NF(v)
v:(f g) WHNF(v) NF(f) NF(g)    =>  NF(v)
v:{i}                          =>  NF(v)
v:{n a b}                      =>  NF(v)
WHNF(n) WHNF(t) NF(b) NAT(n)=0 =>  (0 n a b)     -> 0
WHNF(n) WHNF(t) NF(b)          =>  (0 n a b)     -> {NAT(n) NAT(a) b}
v:{i}                          =>  (1 p l a n v) -> (p i)
v:{n a b}                      =>  (1 p l a n v) -> (l n a b)
v:(f x) WHNF(v)                =>  (1 p l a n v) -> (a f x)
v:@                            =>  (1 p l a n v) -> n
WHNF(v) w=NAT(v)               =>  (2 z p v)     -> if w=0 then z else (p (w-1))
WHNF(x)                        =>  (3 x)         -> NAT(x)+1
NF(x)                          =>  (4 x)         -> {x}
f:@ f>4                        =>  (f x)         -> 0
n=LEN([..])                    =>  ({n a b} ..)  -> RUN([{n a b} ..],b)
@x=LEN([..])                   =>  ({x} ..)      -> (x ...)
