;;;
;;; data Either a b
;;;     = LEFT a
;;;     | RIGHT a
;;;

/+  combo  (I K)
/+  prim   (car cdr die)
/+  nat    (inc dec)
/+  bool   (if)

= (LEFT x)  (0 x)
= (RIGHT x) (1 x)

= (eitherCase x l r)
| if (car x) {! r cdr-x} {! l cdr-x}

= (eitherCaseLeft x r l)
| if (car x) {! r cdr-x} {! l cdr-x}

= (eitherOpen x r)
! eitherCase x _&x r

= (eitherOpenLeft x l)
! eitherCase x l _&x

(fromRight l x)={! eitherCase x l I}

(fromLeft r x)={! eitherCase x I r}

?? ! eitherCase RIGHT-0 K-0 inc
?? ! eitherCase RIGHT-1 K-0 I
?? ! eitherCase RIGHT-2 K-0 dec
?? ! eitherCase LEFT-9  K-1 die
?? ! eitherCase LEFT-1  I   die
?? ! eitherCase LEFT-0  inc die

= (LEFT x)  (0 x)
= (RIGHT x) (1 x)

= (eitherCase x l r)
| if (car x) {! r cdr-x} {! l cdr-x}

= (eitherCaseLeft x r l)
| if (car x) {! r cdr-x} {! l cdr-x}

= (eitherOpen x r)
! eitherCase x _&x r

= (eitherOpenLeft x l)
! eitherCase x l _&x

(fromRight l x)={! eitherCase x l I}

(fromLeft r x)={! eitherCase x I r}

?? ! eitherCase RIGHT-0 K-0 inc
?? ! eitherCase RIGHT-1 K-0 I
?? ! eitherCase RIGHT-2 K-0 dec
?? ! eitherCase LEFT-9  K-1 die
?? ! eitherCase LEFT-1  I   die
?? ! eitherCase LEFT-0  inc die

^-^ LEFT RIGHT
^-^ fromLeft fromRight
^-^ eitherCase eitherOpen
^-^ eitherOpenLeft eitherCaseLeft
