;;
;; Equality
;; ========
;;
;; /+ eql (eql neq)
;;

/+  prim  (isNat isFun isApp)
/+  prim  (funArgs funName funBody appHead appTail)
/+  combo (I K)
/+  bool  (if and not)
/+  nat   (aeq)

= (eql x y)
| if isFun-x
   | and isFun-y
   | and (aeq funArgs-x funArgs-y)
   | and (aeq funName-x funName-y)
         (eql funBody-x funBody-y)
| if isApp-x
   | and isApp-y
   | and (eql appHead-x appHead-y)
         (eql appTail-x appTail-y)
| and isNat-y aeq-x-y

(neq x y)=(not eql-x-y)

?? eql 0    0
?? eql 99   99
?? eql I    I
?? eql _&0  _&0
?? eql (0 0) (0 0)
?? eql (K 0) (K 0)
?? eql (K K) (K K)
?? eql 0,1,2 0,1,2

^-^ eql neq
